plugins {
	id 'org.springframework.boot' version '2.2.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'com.icebergarts'
version = '0.0.1'
sourceCompatibility = '11'
targetCompatibility = '11'

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"


bootJar {
    archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
}

configurations {

	all {
	        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	    }

	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// SPRING
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	// SECURITY
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-oauth2-client'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	// POSTGRES & DB
	runtimeOnly 'org.postgresql:postgresql'
	implementation 'org.flywaydb:flyway-core'
	// DEV
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	implementation("com.google.guava:guava:28.2-jre")
	
	// TEST
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
}

test {
	useJUnitPlatform()
}
