server:
   servlet:
      contextPath: /CarWashAgent
spring:
   jpa:
      open-in-view: false
      hibernate:
         ddl-auto: validate
         naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
      properties:
         hibernate:
            dialect: org.hibernate.dialect.PostgreSQL10Dialect
   datasource:
      hikari:
         connectionTimeout: 20000
         maximumPoolSize: 5
      url: jdbc:postgresql://localhost:5432/carwash
      username: postgres
      password: jagodica11
   security:
      oauth2:
        client:
          registration:
            facebook:
              clientId: 184238596148425
              clientSecret: 4052ad61a2a9e758f08c23b2869593e9
              redirectUri: "http://localhost:8080/CarWashAgent/oauth2/callback/facebook" # Note that facebook now mandates the use of https redirect URIs, so make sure your app supports https in production
              scope:
                - email
                - public_profile
          provider:
            facebook:
              authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
              tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
              userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
carwash:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the frontend client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect           




